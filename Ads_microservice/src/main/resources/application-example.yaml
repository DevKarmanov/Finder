rabbitmq:
  queue:
    rollback:
      name: rollback-queue
    email:
      name: email-queue
    elastic:
      save:
        name: elasticRepo-queue-save
      del:
        name: elasticRepo-queue-del
      patch:
        name: elasticRepo-queue-patch
  exchange:
    rollback:
      name: rollback-exchange
    message:
      name: finder-exchange
    elastic:
      name: elasticRepo-exchange
  routing-key:
    rollback:
      name: rollback-routing-key
    email:
      name: email-routing-key
    elastic:
      save:
        name: elasticRepo-routing-key-save
      del:
        name: elasticRepo-routing-key-del
      patch:
        name: elasticRepo-routing-key-patch

spring:
  rabbitmq:
    host: ${RABBIT_HOST:localhost}
    port: 5672
    username: ${RABBITMQ_DEFAULT_USER:your-rabbit-username}
    password: ${RABBITMQ_DEFAULT_PASS:your-rabbit-password}
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/your_database}
    username: ${POSTGRES_USER:your-db-username}
    password: ${POSTGRES_PASSWORD:your-db-password}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
  servlet:
    multipart:
      max-request-size: 30MB
      max-file-size: 6MB
  elasticsearch:
    uris: http://${ELASTIC_HOST:localhost}:9200
    username: ${ELASTIC_USERNAME:your-elastic-username}
    password: ${ELASTIC_PASSWORD:your-elastic-password}
  data:
    redis:
      password: ${REDIS_PASSWORD:your-redis-password}

server:
  port: 8080

redis:
  host: ${REDIS_HOST:localhost}

microservices:
  x-api-key: ${X_API_KEY:your-api-key}
  comment:
    prefix: http://
    host: ${COMMENT_HOST:localhost}
    port: 8081
    endpoints:
      addComments: /comment/add/all
      dellAllCommentsByCard: /comment/delAll/
  image:
    prefix: http://
    host: ${IMAGE_HOST:localhost}
    port: 8082
    endpoints:
      addCardImages: /image/addCardImages
      delImagesFromMinio: /image/minio/del
      getImages: /image/get
      delOneImageFromCard: /image/del
      moveImage: /image/move
  authentication:
    prefix: http://
    host: ${AUTHENTICATION_HOST:localhost}
    port: 8083
    endpoints:
      validateToken: /auth/validate
      user: /user/get
      addCardToUser: /user/addCard
      unlinkCardFromUser: /user/card/del
      unlinkFavoriteCardFromAllUsers: /user/card/favorite/unlink

card:
  images:
    count: 6

email:
  settings:
    send: ${SEND_EMAIL_MESSAGE:true}
