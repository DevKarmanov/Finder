spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:LOCAL_POSTGRES_PORT/DATABASE_NAME}
    username: ${POSTGRES_USER:LOCAL_POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD:LOCAL_POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
  servlet:
    multipart:
      max-request-size: 30MB
      max-file-size: 6MB
  elasticsearch:
    uris: http://${ELASTIC_HOST:localhost}:9200
    username: my_user
    password: ${ELASTIC_PASSWORD:ELASTIC_LOCAL_PASSWORD}

server:
  port: 8080

redis:
  host: ${REDIS_HOST:localhost}

microservices:
  x-api-key: ${X_API_KEY:local-api-key}
  comment:
    prefix: http://
    host: ${COMMENT_HOST:localhost}
    port: 8081
    endpoints:
      dellAllCommentsByCard: /comment/delAll/
  image:
    prefix: http://
    host: ${IMAGE_HOST:localhost}
    port: 8082
    endpoints:
      addCardImages: /image/addCardImages
      delImagesFromMinio: /image/minio/del
      getImages: /image/get
      delOneImageFromCard: /image/del
      moveImage: /image/move
  authentication:
    prefix: http://
    host: ${AUTHENTICATION_HOST:localhost}
    port: 8083
    endpoints:
      validateToken: /auth/validate
      user: /user/get
      addCardToUser: /user/addCard
      unlinkCardFromUser: /user/card/del

card:
  images:
    count: 6